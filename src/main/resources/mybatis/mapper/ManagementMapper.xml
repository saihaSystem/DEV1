<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saiha.saihaWeb.mapper.ManagementMapper">
    <select id="select_contents_data" resultType="map" parameterType="String">
        <![CDATA[
             SELECT  /* Insa_Base.java.getBaseData2(String) */
                     T1.JUMIN_NO, T1.ID, T1.KOR_NAME, T1.CHI_NAME, T1.ENG_NAME
                   , T1.JOIN_YMD, T1.LEAVE_YMD
                   , T1.ZIPCODE, T1.ADDRESS, T1.FAMILY_REGISTER_ZIPCODE
                   , T1.FAMILY_REGISTER_ADDRESS, T1.JUMIN_ZIPCODE, T1.JUMIN_ADDRESS, T1.POSITION_YMD, T1.DEPT_CODE
                   , T1.TEAM_CODE, T1.POSITION_CODE, T1.ONE_DUTY_CODE, T1.EMAIL, T1.NUM_TEL
                   , T1.HP_TEL, T1.PASSPORT_NO, T1.CONTRACT_WORK_YN, T1.EMPLOYMENT_CODE, T1.BIRTH_YMD
                   , T1.SOLAR_CALENDAR_YN, T2.PWD, T2.GRADE_CODE, T2.CONTROL_YN
                   , SubStr(T1.JUMIN_NO,1,6) SID1, SubStr(T1.JUMIN_NO,7,7) SID2
                   , T3.SAVE_FILE_NM, T3.FILE_NM, T3.SAVE_PATH, T3.FILE_SIZE
             FROM    ( SELECT JUMIN_NO, SAVE_FILE_NM, FILE_NM, SAVE_PATH, FILE_SIZE FROM informationfile WHERE GUBUN = 'INSA') T3
                     , use T2, information T1
             WHERE T1.ID = T2.ID
             AND T1.JUMIN_NO = T3.JUMIN_NO(+)
             AND T1.ID = #{UserID}
        ]]>
    </select>

    <select id="select_education_data" resultType="map" parameterType="String">
          SELECT   SEQ, ENTER_YMD
                  ,SubStr(ENTER_YMD,1,4) ENTER_Y, SubStr(ENTER_YMD,6,2) ENTER_M, SubStr(ENTER_YMD,9,2) ENTER_D
                  ,GRADUATION_YMD, SCHOOL_CODE
                  ,SubStr(GRADUATION_YMD,1,4) GRADUATION_Y
                  ,SubStr(GRADUATION_YMD,6,2) GRADUATION_M
                  ,SubStr(GRADUATION_YMD,9,2) GRADUATION_D
                  ,NVL(A.SCHOOL_NM,(SELECT SCHOOL_NM  FROM   ACADEMICCODE WHERE CODE = A.SCHOOL_CODE)) SCHOOL
                  ,MAJOR, A.ACADEMIC_CODE, A.GRADUATION_CODE, A.DEGREE_CODE
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.ACADEMIC_CODE) ACADEMIC
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.GRADUATION_CODE) GRADUATION
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.DEGREE_CODE) DEGREE
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.LOCATION) LOCATION
                  ,MINOR, A.LOCATION LOCATION_CODE, B.SAVE_FILE_NM, B.FILE_NM, B.SAVE_PATH, B.FILE_SIZE
          FROM ACADEMIC A, INFORMATIONFILE B
          WHERE A.JUMIN_NO = B.JUMIN_NO(+)
          AND A.SEQ = INFORMATION_NO(+)
          AND B.GUBUN(+) = 'SCHO'
          AND A.JUMIN_NO = #{jumin}
          AND A.SEQ = #{seq}
    </select>



    <select id="select_education_list" resultType="map" parameterType="String">
          SELECT   SEQ
                  ,NVL(A.SCHOOL_NM,(SELECT SCHOOL_NM  FROM   ACADEMICCODE WHERE CODE = A.SCHOOL_CODE)) SCHOOL
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.LOCATION) LOCATION
                  ,SubStr(ENTER_YMD,1,7) ENTER_Y
                  ,SubStr(GRADUATION_YMD,1,7) GRADUATION_Y
                  ,MAJOR
                  ,MINOR
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.DEGREE_CODE) DEGREE
                  ,(SELECT CODE_NM  FROM   COMMON WHERE CODE = A.GRADUATION_CODE) GRADUATION
                  ,JUMIN_NO
          FROM ACADEMIC A
          WHERE JUMIN_NO = #{jumin}

    </select>

    <select id="select_career_data" resultType="map" parameterType="String">
              SELECT  T1.CAREER_STEP, T1.JUMIN_NO,T1.DEPT_NM, T1.POSITION, T1.ONE_DUTY,
                      T1.JOIN_YMD, T1.LEAVE_YMD,
                      T2.SAVE_FILE_NM, T2.FILE_NM, T2.SAVE_PATH, T2.FILE_SIZE
              FROM CAREER T1, informationfile t2
              WHERE T1.JUMIN_NO = T2.JUMIN_NO(+)
                AND T1.CAREER_STEP = T2.INFORMATION_NO(+)
                AND T2.GUBUN(+) = 'CARE'
                AND T1.JUMIN_NO = #{jumin}
                 AND T1.CAREER_STEP = #{seq}
    </select>


    <select id="select_career_list" resultType="map" parameterType="String">
            SELECT CAREER_STEP, JUMIN_NO
                  ,DEPT_NM, POSITION, ONE_DUTY
                  ,SubStr(JOIN_YMD,1,7) JOIN_YMD
                  ,SubStr(LEAVE_YMD,1,7) LEAVE_YMD
            FROM CAREER
            WHERE JUMIN_NO = #{jumin}

    </select>

    <select id="select_license_data" resultType="map" parameterType="String">
         /* select_license_data */                  
         SELECT license_seq, gain_ymd, license_grade, license_no, license_nm,         
                send_dept_nm, t2.save_file_nm, t2.file_nm, t2.save_path, t2.file_size 
           FROM license t1, informationfile t2                                        
          WHERE t1.jumin_no = t2.jumin_no(+)                                          
            AND t1.license_seq = t2.information_no(+)                                 
            AND t2.gubun(+)     = 'CERT'                                                 
            AND t1.jumin_no    = #{jumin}
            AND t1.license_seq = #{seq}

    </select>

    <select id="select_license_list" resultType="map" parameterType="String">
             SELECT /*select_license_list*/              
                     LICENSE_SEQ,LICENSE_NM, LICENSE_GRADE,                    
                     LICENSE_NO, GAIN_YMD, SEND_DEPT_NM, JUMIN_NO           
             FROM LICENSE                                             
             WHERE JUMIN_NO = #{jumin}
    </select>



    <select id="select_edu_data" resultType="map" parameterType="String">
             SELECT T1.EDU_SEQ, T1.JUMIN_NO,T1.EDU_NAME, T1.EDU_NUM, T1.START_YMD,      
                T1.END_YMD, T1.EDU_AGCY,                       
                T1.GAIN_YMD  ,                     
                t2.save_file_nm, t2.file_nm, t2.save_path, t2.file_size               
             FROM EDUCATION T1, informationfile t2                                         
             WHERE T1.JUMIN_NO = T2.JUMIN_NO(+)                                         
               AND T1.EDU_SEQ = T2.INFORMATION_NO(+)                                
               AND T2.GUBUN(+) = 'EDUT'                                                 
                AND T1.JUMIN_NO = #{jumin}
                AND T1.EDU_SEQ = #{seq}
    </select>





    <select id="select_edu_list" resultType="map" parameterType="String">
           SELECT EDU_SEQ, JUMIN_NO       
                 ,EDU_NAME, EDU_NUM            
                 ,SubStr(START_YMD,1,7) START_YMD       
                 ,SubStr(END_YMD,1,7) END_YMD     
                 ,EDU_AGCY, GAIN_YMD            
           FROM EDUCATION                                    
           WHERE JUMIN_NO = #{jumin}
    </select>




    <update id="managementUpdate" parameterType="map">
              UPDATE INFORMATION                    "
                 /* Insa_Base.updateTableINSA(String[], int, int) */
                    SET ( KOR_NAME, CHI_NAME, ENG_NAME
                        , JOIN_YMD, LEAVE_YMD, ZIPCODE, ADDRESS, FAMILY_REGISTER_ZIPCODE
                        , FAMILY_REGISTER_ADDRESS, JUMIN_ZIPCODE, JUMIN_ADDRESS, POSITION_YMD, DEPT_CODE
                        , TEAM_CODE, POSITION_CODE, ONE_DUTY_CODE, EMAIL, NUM_TEL
                        , HP_TEL, PASSPORT_NO, CONTRACT_WORK_YN, EMPLOYMENT_CODE, BIRTH_YMD
                        , SOLAR_CALENDAR_YN)
                        =
                        ( SELECT #{KOR_NAME}, #{CHI_NAME}, #{ENG_NAME}
                        , #{JOIN_YMD}, #{LEAVE_YMD}, #{ZIPCODE}, #{ADDRESS}, #{FAMILY_REGISTER_ZIPCODE}
                        , #{FAMILY_REGISTER_ADDRESS}, #{JUMIN_ZIPCODE}, #{JUMIN_ADDRESS}, #{POSITION_YMD}, #{DEPT_CODE}
                        , #{TEAM_CODE}, #{POSITION_CODE}, #{ONE_DUTY_CODE}, #{EMAIL}, #{NUM_TEL}
                        , #{HP_TEL}, #{PASSPORT_NO}, #{CONTRACT_WORK_YN}, #{EMPLOYMENT_CODE}, #{BIRTH_YMD}
                        , #{SOLAR_CALENDAR_YN}
                            FROM DUAL )
                  WHERE JUMIN_NO = #{jumin}

    </update>
    <update id="managementEducationUpdate" parameterType="map">
          UPDATE /*Insa_Scho.executeUpdate()*/ ACADEMIC
            SET ENTER_YMD = #{ENTER_YMD},
                GRADUATION_YMD = #{GRADUATION_YMD},
                SCHOOL_CODE = #{SCHOOL_CODE},
                MAJOR = #{MAJOR},
                GRADUATION_CODE = #{GRADUATION_CODE},
                DEGREE_CODE = #{DEGREE_CODE},
                LOCATION = #{LOCATION},
                MINOR = #{MINOR} ,
                SCHOOL_NM = #{SCHOOL_NM}
           WHERE JUMIN_NO = #{jumin}
           AND SEQ = #{SEQ}

    </update>
    <update id="managementCareerUpdate" parameterType="map">
          UPDATE CAREER
             SET JOIN_YMD = #{JOIN_YMD},
                 LEAVE_YMD = #{LEAVE_YMD},
                 DEPT_NM = #{DEPT_NM},
                 POSITION = #{POSITION},
                 ONE_DUTY = #{ONE_DUTY}
           WHERE JUMIN_NO = #{jumin} AND CAREER_STEP = #{CAREER_STEP}

    </update>

    <update id="managementLicenseUpdate" parameterType="map">
          UPDATE LICENSE
          SET   GAIN_YMD       = #{GAIN_YMD}
               ,LICENSE_GRADE  = #{LICENSE_GRADE}
               ,LICENSE_NO     = #{LICENSE_NO}
               ,LICENSE_NM     = #{LICENSE_NM}
               ,SEND_DEPT_NM   = #{SEND_DEPT_NM}
          WHERE JUMIN_NO=#{jumin} AND LICENSE_SEQ=#{LICENSE_SEQ}

    </update>

    <update id="managementEduUpdate" parameterType="map">
          UPDATE education
             SET EDU_NAME = #{EDU_NAME},
                 EDU_NUM = #{EDU_NUM},
                 START_YMD = #{START_YMD},
                 END_YMD = #{END_YMD},
                 EDU_AGCY = #{EDU_AGCY},
                 GAIN_YMD = #{GAIN_YMD}
           WHERE jumin_no = #{jumin] AND edu_seq = #{edu_seq}

    </update>






    <select id="insaCount" resultType="int" parameterType="map">
        SELECT count(*) count
            FROM ( SELECT ID,
            NAME,
            JUMIN_NO,
            SOSOK,
            POSITION,
            TEAM_NM,
            ROWNUM N
            FROM ( SELECT T1.ID,
            T1.KOR_NAME NAME,
            T1.JUMIN_NO,
            T1.LEAVE_YMD,
            B.CODE_NM SOSOK,
            C.CODE_NM POSITION,
            D.CODE_NM TEAM_NM
                FROM ( SELECT CODE, CODE_NM FROM COMMON WHERE CODE_GUBUN ='PT1') B,
                ( SELECT CODE, CODE_NM FROM COMMON WHERE CODE_GUBUN ='GD1') C,
                ( SELECT CODE, CODE_NM FROM COMMON WHERE CODE_GUBUN ='TE1') D,
                USE T2,
                INFORMATION T1
                    WHERE T1.DEPT_CODE = B.CODE(+)
                    AND T1.ONE_DUTY_CODE = C.CODE(+)
                    AND T1.TEAM_CODE = D.CODE(+)
                    AND T2.ID = T1.ID

                    <if test="UserID != null and UserID == '1000'" >
                        AND T1.ID = #{UserID}
                    </if>

                    <if test="searchSelect0 == null or (searchSelect0 != null and searchSelect0 == 'work')">
                        AND T1.LEAVE_YMD is NULL
                    </if>

                    <if test="searchSelect0 != null and searchSelect0 == 'fire'">
                        AND T1.LEAVE_YMD is NOT NULL
                    </if>

                    <if test="searchTxt1 != null and searchTxt1 != ''">
                        <choose>
                            <when test="searchSelect1 == 'name'">
                                AND T1.KOR_NAME like '%'||#{searchTxt1}||'%'
                            </when>
                            <when test="searchSelect1 == 'sabun'">
                                AND T1.ID like '%'||#{searchTxt1}||'%'
                            </when>
                            <when test="searchSelect1 == 'jubun'">
                                AND T1.JUMIN_NO like '%'||#{searchTxt1}||'%'
                            </when>
                        </choose>
                    </if>

                    <if test="searchTxt2 != null and searchTxt2 != ''">
                        <choose>
                            <when test="searchSelect2 == 'part'">
                                AND B.CODE_NM like '%'||#{searchTxt2}||'%'
                            </when>
                            <when test="searchSelect2 == 'posi'">
                                AND C.CODE_NM like '%'||#{searchTxt2}||'%'
                            </when>
                            <when test="searchSelect2 == 'team'">
                                AND D.CODE_NM like '%'||#{searchTxt2}||'%'
                            </when>
                        </choose>
                    </if>
                ORDER BY NAME asc, ID asc
                 )
            )




    </select>

    <select id="selectInsa" resultType="ManagementDTO" parameterType="map">
        SELECT
            ID,
            NAME,
            JUMIN_NO,
            SubStr(JUMIN_NO2,1,6)||'-'||'*******' JUMIN_NO2,
            SOSOK,
            POSITION,
            TEAM_NM,
            N BRD_NO
                FROM ( SELECT ID,
                NAME,
                JUMIN_NO,
                SOSOK,
                POSITION,
                TEAM_NM,
                ROWNUM N,
                JUMIN_NO2
                    FROM ( SELECT T1.ID,
                    T1.KOR_NAME NAME,
                    T1.JUMIN_NO,
                    T1.LEAVE_YMD,
                    B.CODE_NM SOSOK,
                    C.CODE_NM POSITION,
                    D.CODE_NM TEAM_NM,
                    NVL(T1.JUMIN_NO2,REPLACE(SUBSTR(T1.BIRTH_YMD,3),'-','')) JUMIN_NO2
                        FROM ( SELECT CODE, CODE_NM FROM COMMON WHERE CODE_GUBUN ='PT1') B,
                        ( SELECT CODE, CODE_NM FROM COMMON WHERE CODE_GUBUN ='GD1') C,
                        ( SELECT CODE, CODE_NM FROM COMMON WHERE CODE_GUBUN ='TE1') D,
                        USE T2, INFORMATION T1
                            WHERE T1.DEPT_CODE = B.CODE(+)
                            AND T1.ONE_DUTY_CODE = C.CODE(+)
                            AND T1.TEAM_CODE = D.CODE(+)
                            AND T2.ID = T1.ID

                            <if test="UserID != null and UserID == '1000'" >
                                AND T1.ID = #{UserID}
                            </if>

                            <if test="searchSelect0 == null or (searchSelect0 != null and searchSelect0 == 'work')">
                                AND T1.LEAVE_YMD is NULL
                            </if>

                            <if test="searchSelect0 != null and searchSelect0 == 'fire'">
                                AND T1.LEAVE_YMD is NOT NULL
                            </if>

                            <if test="searchTxt1 != null and searchTxt1 != ''">
                                <choose>
                                    <when test="searchSelect1 == 'name'">
                                        AND T1.KOR_NAME like '%'||#{searchTxt1}||'%'
                                    </when>
                                    <when test="searchSelect1 == 'sabun'">
                                        AND T1.ID like '%'||#{searchTxt1}||'%'
                                    </when>
                                    <when test="searchSelect1 == 'jubun'">
                                        AND T1.JUMIN_NO like '%'||#{searchTxt1}||'%'
                                    </when>
                                </choose>
                            </if>

                            <if test="searchTxt2 != null and searchTxt2 != ''">
                                <choose>
                                    <when test="searchSelect2 == 'part'">
                                        AND B.CODE_NM like '%'||#{searchTxt2}||'%'
                                    </when>
                                    <when test="searchSelect2 == 'posi'">
                                        AND C.CODE_NM like '%'||#{searchTxt2}||'%'
                                    </when>
                                    <when test="searchSelect2 == 'team'">
                                        AND D.CODE_NM like '%'||#{searchTxt2}||'%'
                                    </when>
                                </choose>
                            </if>
                        ORDER BY NAME asc, ID asc
                    )
                )
        WHERE N BETWEEN ((#{page} - 1) *  (#{pagemax}) +1) and #{page} * #{pagemax}
    </select>
</mapper>